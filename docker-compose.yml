version: '3.8'

services:
  duckstudy:
    build: .
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=production
      - FLASK_SECRET_KEY=${FLASK_SECRET_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - MAX_CONTENT_LENGTH=${MAX_CONTENT_LENGTH}
      - UPLOAD_FOLDER=${UPLOAD_FOLDER}
      - SESSION_COOKIE_SECURE=${SESSION_COOKIE_SECURE}
      - SESSION_COOKIE_HTTPONLY=${SESSION_COOKIE_HTTPONLY}
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FILE=${LOG_FILE}
      - CACHE_TYPE=${CACHE_TYPE}
      - CACHE_DEFAULT_TIMEOUT=${CACHE_DEFAULT_TIMEOUT}
    volumes:
      - ./frontend/images:/app/frontend/images
      - ./frontend/data:/app/frontend/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./frontend:/var/www/html
    depends_on:
      - duckstudy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 可选：Redis 缓存服务
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis_data: 